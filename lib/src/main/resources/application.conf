pipelineAgent {
    s3 {
       endpoint = "http://localhost:9000"   # MinIO
       accessKey = "minioadmin"
       secretKey = "minioadmin"
       bucket = "demo-bucket"
       objectKey     = "test/hello.txt"
     }
  sources = [
    {
      name  = "Source1"                    # must match folder name
      inbox = "/tmp/data/in/Source1"

      concurrency {
        threads   = 4
        queueSize = 1024
      }

      output {
        clean     = "/tmp/data/out/Source1/clean"
        reject    = "/tmp/data/out/Source1/reject"
        rowErrors = "/tmp/data/out/Source1/errors"
      }

      archive {
        accepted = "/tmp//data/archive/Source1/accepted"
        rejected = "/tmp/data/archive/Source1/rejected"
        failed   = "/tmp/data/archive/Source1/failed"   # for unexpected exceptions
      }

       # This defines the rules of validation for source files
      validator {

        # File level validations run first
        file {
          # First non-empty line after the header-control must be a valid column header row
          requireHeaderRow = true

          # Looks for a line like: "UHDR 2025240", allows you to define what this prefix is
          headerPrefix     = "UHDR"

          # Last non-empty line must be: "Total <count>"
          # (or change to "TRL" if your feed ends with "TRL <count>")
          trailerPrefix    = "Total"
          expectedColumns  = [ "ENTY", "CURR", "QTY", "DATE" ]
          columnDelimiter  = ","
        }

        # If file level validations pass, then row level validations will run
        row {
          # How the rows are delimited
          delimiter    = ","

          # Number of the expected columns per row
          expectedCols = 4

          # Per-column validation rules
          # Examples of different validations
          columns = [
            { kind = "string",  index = 0, notBlank = true, minLen = 2, maxLen = 20 }
            { kind = "string",  index = 1, notBlank = true, minLen = 3, maxLen = 3, regex = "^[A-Z]{3}$" }
            { kind = "decimal", index = 2, notBlank = true, sign = "positive", min = 0 }
            { kind = "date",    index = 3, notBlank = true, dateFormat = "yyyy-MM-dd" }
          ]
        }
      }
    }
  ]
}


agent {
 s3 {
   endpoint = "http://localhost:9000"   # MinIO
   accessKey = "minioadmin"
   secretKey = "minioadmin"
   bucket = "demo-bucket"
   objectKey     = "test/hello.txt"
 }
}